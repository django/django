name: Labels

on:
  pull_request_target:
    types: [edited, opened, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  pull-requests: write

jobs:
  no_ticket:
    # Only trigger on the main Django repository
    if: github.repository == 'django/django'
    name: "Flag if no Trac ticket is found in the title"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: "Check title and manage labels"
        uses: actions/github-script@v8
        with:
          script: |
            const title = context.payload.pull_request.title;
            const regex = /#[0-9]+[ ,:]?/gm;
            const label = "no ticket";
            const hasMatch = regex.test(title);
            const labels = context.payload.pull_request.labels.map(l => l.name);
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pr_number = context.payload.pull_request.number;

            console.log(`=> Pull Request Title: ${title}`);
            console.log(`=> Labels on PR: [${labels}]`);

            if (hasMatch && labels.includes(label)) {
              console.log(`==> Removing label "${label}" from PR #${pr_number}`);
              await github.rest.issues.removeLabel({
                owner,
                repo,
                issue_number: pr_number,
                name: label
              });
            } else if (!hasMatch && !labels.includes(label)) {
              console.log(`==> Adding label "${label}" to PR #${pr_number}`);
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: pr_number,
                labels: [label]
              });
            } else {
              console.log(`No action needed for PR #${pr_number}`);
            }

  tutorial_pr:
    if: github.repository == 'django/django'
    name: "Flag potential tutorial PRs"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: "Analyze PR patterns and manage labels"
        id: analyze
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            const title = context.payload.pull_request.title;
            const body = context.payload.pull_request.body || "";
            const label = "possibly-tutorial-pr";

            const analysisJson = execSync(`python .github/scripts/pattern_analyzer.py analyze "${title}" "${body}"`).toString();
            const analysis = JSON.parse(analysisJson);

            const hasMatch = analysis.has_matches;
            const shouldAutoClose = analysis.should_auto_close;
            const labels = context.payload.pull_request.labels.map(l => l.name);
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pr_number = context.payload.pull_request.number;

            console.log(`=> Pull Request Title: ${title}`);
            console.log(`=> Analysis result:`, analysis);
            console.log(`=> Labels on PR: [${labels}]`);

            if (hasMatch && !labels.includes(label)) {
              console.log(`==> Adding label "${label}" to PR #${pr_number}`);
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: pr_number,
                labels: [label]
              });
            } else if (!hasMatch && labels.includes(label)) {
              console.log(`==> Removing label "${label}" from PR #${pr_number}`);
              await github.rest.issues.removeLabel({
                owner,
                repo,
                issue_number: pr_number,
                name: label
              });
            }

            core.setOutput('should_auto_close', shouldAutoClose && hasMatch);
            core.setOutput('analysis', JSON.stringify(analysis));

      - name: "Auto-close if needed"
        if: steps.analyze.outputs.should_auto_close == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const analysis = JSON.parse('${{ steps.analyze.outputs.analysis }}');
            const pr_number = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const matchDetails = analysis.matches.map(m => 
              `- Pattern \`${m.pattern}\` found in ${m.location}: \`${m.matched_text}\``
            ).join('\n');

            const comment = [
              '## PR Auto-Close ⚠️',
              '',
              'This PR has been automatically closed because it appears to be a tutorial or test submission.',
              '',
              '**Detected patterns:**',
              matchDetails,
              '',
              '**If this is a legitimate contribution:**',
              '- Please ensure your PR title references a Trac ticket (e.g., `Fixed #12345 - Description`)',
              '- Follow our [contribution guidelines](https://docs.djangoproject.com/en/dev/internals/contributing/)',
              '- Feel free to reopen if this closure was in error'
            ].join('\n');

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: pr_number,
              body: comment
            });

            await github.rest.pulls.update({
              owner,
              repo,
              pull_number: pr_number,
              state: 'closed'
            });

            console.log(`Auto-closed PR #${pr_number}`);
